{"ast":null,"code":"var _jsxFileName = \"/Users/lateefhabdulaziz/sei/projects/reactlistapp/project-2-prompt/src/ListContainer.js\";\nimport React, { Fragment } from 'react';\nimport ListItem from './ListItem';\nexport default class ListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleState = () => {\n      let {\n        isEdit\n      } = this.state;\n      this.setState({\n        isEdit: !isEdit\n      });\n    };\n\n    this.updateForm = () => {\n      return React.createElement(\"form\", {\n        onClick: this.ubdatebookname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: v => {\n          this.input = v;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Update \"));\n    };\n\n    this.ubdatebookname = e => {\n      this.props.edititem(this.props.index, this.input.value);\n      this.toggleState();\n    };\n\n    this.allItems = this.props.addIteme.map((task, index) => {\n      console.log(this);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        taskName: task,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.props.deleteitem(index),\n        type: \"button\",\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" deleteitem\"), React.createElement(\"button\", {\n        onClick: () => this.toggleState(index),\n        type: \"button\",\n        className: \"button-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Edit \"), React.createElement(\"button\", {\n        onClick: () => this.props.Markcomplete(index),\n        type: \"button\",\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Markcomplete\"), React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, isEdit ? this.updateForm() : this.toggleState));\n    });\n    this.state = {\n      setEditing: false\n    };\n  }\n\n  render() {\n    let {\n      isEdit\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"  \", allItems);\n  }\n\n}","map":{"version":3,"sources":["/Users/lateefhabdulaziz/sei/projects/reactlistapp/project-2-prompt/src/ListContainer.js"],"names":["React","Fragment","ListItem","ListContainer","Component","constructor","props","toggleState","isEdit","state","setState","updateForm","ubdatebookname","v","input","e","edititem","index","value","allItems","addIteme","map","task","console","log","deleteitem","Markcomplete","setEditing","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMjBC,WANiB,GAML,MAAI;AACd,UAAI;AAACC,QAAAA;AAAD,UAAS,KAAKC,KAAlB;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA,MAAM,EAAC,CAACA;AADI,OAAd;AAGD,KAXgB;;AAAA,SAYjBG,UAZiB,GAYN,MAAI;AACb,aACE;AAAM,QAAA,OAAO,EAAE,KAAKC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAGC,CAAD,IAAK;AAAC,eAAKC,KAAL,GAAWD,CAAX;AAAa,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CADF;AAMD,KAnBgB;;AAAA,SAoBjBD,cApBiB,GAoBDG,CAAD,IAAK;AAElB,WAAKT,KAAL,CAAWU,QAAX,CAAoB,KAAKV,KAAL,CAAWW,KAA/B,EAAqC,KAAKH,KAAL,CAAWI,KAAhD;AACA,WAAKX,WAAL;AACD,KAxBgB;;AAAA,SA2BjBY,QA3BiB,GA2BN,KAAKb,KAAL,CAAWc,QAAX,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOL,KAAP,KAAgB;AACjDM,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEF,IAApB;AAA0B,QAAA,GAAG,EAAEL,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEC;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKX,KAAL,CAAWmB,UAAX,CAAsBR,KAAtB,CAArB;AAAmD,QAAA,IAAI,EAAC,QAAxD;AAAiE,QAAA,SAAS,EAAC,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFD,EAGA;AAAQ,QAAA,OAAO,EAAE,MAAK,KAAKV,WAAL,CAAiBU,KAAjB,CAAtB;AAA8C,QAAA,IAAI,EAAC,QAAnD;AAA4D,QAAA,SAAS,EAAC,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHA,EAIA;AAAQ,QAAA,OAAO,EAAE,MAAK,KAAKX,KAAL,CAAWoB,YAAX,CAAwBT,KAAxB,CAAtB;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAoE,QAAA,SAAS,EAAC,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJA,EAKA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGT,MAAM,GAAE,KAAKG,UAAL,EAAF,GAAoB,KAAKJ,WAFlC,CALA,CADA;AAYD,KAdU,CA3BM;AAEjB,SAAKE,KAAL,GAAa;AACXkB,MAAAA,UAAU,EAAC;AADA,KAAb;AAGC;;AAuCHC,EAAAA,MAAM,GAAG;AACT,QAAI;AAACpB,MAAAA;AAAD,QAAS,KAAKC,KAAlB;AAGE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQU,QAAR,CADF;AAOD;;AAxDwD","sourcesContent":["import React, { Fragment } from 'react';\nimport ListItem from './ListItem';\nexport default class ListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setEditing:false\n      }\n    }\n    toggleState=()=>{\n      let {isEdit}=this.state;\n      this.setState({\n        isEdit:!isEdit\n      })\n    }\n    updateForm=()=>{\n      return(\n        <form onClick={this.ubdatebookname}>\n          <input type=\"text\" ref={(v)=>{this.input=v}}></input>\n          <button>Update </button>\n        </form>\n      )\n    }\n    ubdatebookname=(e)=>{\n    \n      this.props.edititem(this.props.index,this.input.value)\n      this.toggleState();\n    }\n\n\n    allItems = this.props.addIteme.map((task, index)=> {\n      console.log(this)\n      return(\n      <div>\n        <ListItem taskName={task} key={index}   />\n       <button onClick={()=>this.props.deleteitem(index)} type=\"button\" className=\"button\"> deleteitem</button>\n      <button onClick={()=> this.toggleState(index)}type=\"button\" className='button-edit'>Edit </button > \n      <button onClick={()=> this.props.Markcomplete(index)} type=\"button\" className=\"button\">Markcomplete</button>\n      <Fragment>\n        \n        {isEdit? this.updateForm():this.toggleState}\n      </Fragment>\n</div>\n      ) \n    });\n\n    \n  render() {\n  let {isEdit}=this.state;\n\n    \n    return (\n      <div>  {allItems}\n       \n      </div>\n      \n     \n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}