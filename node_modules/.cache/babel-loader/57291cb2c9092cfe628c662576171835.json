{"ast":null,"code":"var _jsxFileName = \"/Users/lateefhabdulaziz/sei/projects/reactlistapp/project-2-prompt/src/ListContainer.js\";\nimport React, { Fragment } from 'react';\nimport ListItem from './ListItem';\nexport default class ListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleState = () => {\n      let {\n        isEdit\n      } = this.state;\n      this.setState({\n        isEdit: !isEdit\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.updateForm = () => {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.input,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.props.edititem(),\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Update \"));\n    };\n\n    this.ubdatebookname = e => {\n      this.props.edititem(this.props.index, this.input.value); // this.toggleState();\n    };\n\n    this.state = {\n      setEditing: false,\n      input: \"\"\n    };\n  }\n\n  render() {\n    let {\n      isEdit\n    } = this.state;\n    console.log();\n    const allItems = this.props.addIteme.map((task, index) => {\n      console.log(this);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        taskName: task,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: () => this.props.deleteitem(index),\n        type: \"button\",\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" deleteitem\"), React.createElement(\"button\", {\n        onClick: () => this.toggleState(index),\n        type: \"button\",\n        className: \"button-edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Edit \"), React.createElement(\"button\", {\n        onClick: () => this.props.Markcomplete(index),\n        type: \"button\",\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Markcomplete\"), React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, isEdit ? this.updateForm() : this.toggleState));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"  \", allItems);\n  }\n\n}","map":{"version":3,"sources":["/Users/lateefhabdulaziz/sei/projects/reactlistapp/project-2-prompt/src/ListContainer.js"],"names":["React","Fragment","ListItem","ListContainer","Component","constructor","props","toggleState","isEdit","state","setState","handleChange","e","input","target","value","updateForm","edititem","ubdatebookname","index","setEditing","render","console","log","allItems","addIteme","map","task","deleteitem","Markcomplete"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport ListItem from './ListItem';\nexport default class ListContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setEditing:false,\n       input:\"\",\n       \n      }\n    }\n    toggleState=()=>{\n      let {isEdit}=this.state;\n      this.setState({\n        isEdit:!isEdit\n      })\n    }\n    handleChange=(e)=>{\n       this.setState({\n        input:e.target.value\n\n       })\n    }\n    updateForm=()=>{\n      return(\n        <form >\n          {/* <input type=\"text\" ref={(v)=>{this.input=v}}></input> */}\n          <input type=\"text\" value={this.state.input} onChange={this.handleChange}></input>\n          <button  onClick={()=>this.props.edititem()} type=\"button\"  >Update </button>\n        </form>\n      )\n    }\n    ubdatebookname=(e)=>{\n      this.props.edititem(this.props.index,this.input.value)\n      // this.toggleState();\n    }\n  render() {\n  let {isEdit}=this.state;\n  console.log()\n    const allItems = this.props.addIteme.map((task, index)=> {\n      console.log(this)\n      return(<div>\n        <ListItem taskName={task} key={index}   />\n\n  <button onClick={()=>this.props.deleteitem(index)} type=\"button\" className=\"button\"> deleteitem</button>\n      <button onClick={()=> this.toggleState(index)}type=\"button\" className='button-edit'>Edit </button > \n      <button onClick={()=> this.props.Markcomplete(index)} type=\"button\" className=\"button\">Markcomplete</button>\n      <Fragment>\n        {isEdit? this.updateForm():this.toggleState}\n      </Fragment>\n</div>\n      ) \n    });\n   \n    return (\n      <div>  {allItems}\n       \n      </div>\n      \n     \n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}